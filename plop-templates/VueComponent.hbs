<!--  Generated from VueComponent plop template -->

<template>
    <div id="{{ pascalCase class }}Component" class="container h-fill">

    </div>
</template>

<!------------------------------------------------------------------------------------------------->

<script setup lang="ts">
  import { EMIT } from "@/enum";
  import { computed, onMounted, Ref, ref } from "vue";

  //////////////////////////////////////////////////////////////////////////////////////////////////
  //  PROPS
  // interface I{{ pascalCase class }}ComponentProps
  // {
  //   blah: string;
  // }
  //
  // const props: Readonly<I{{ pascalCase class }}ComponentProps> = withDefaults(defineProps<I{{ pascalCase class }}ComponentProps>(), {
  //   blah: "",
  // });

  //////////////////////////////////////////////////////////////////////////////////////////////////
  //  EMITS
  // const emit = defineEmits([ EMIT.SELECTED, ]);



  //////////////////////////////////////////////////////////////////////////////////////////////////
  //  PRIVATE
  const _name: string = "{{ pascalCase class }}Component";


  //////////////////////////////////////////////////////////////////////////////////////////////////
  //  GETTERS
  // const getApplicationUuid = computed(() => _getters.getApplicationUuid);


  //////////////////////////////////////////////////////////////////////////////////////////////////
  //  COMPUTED
  // const getContact = computed(() => {
  //   return getApplication.value.contact[0]?.number;
  // });


  //////////////////////////////////////////////////////////////////////////////////////////////////
  //  WATCH
  // const watch = {
  //
  // }


  //////////////////////////////////////////////////////////////////////////////////////////////////
  //  SIGNALS
  // Signals.PUSHER_NOTIFICATION.add(onPusherNotification, () => {})


  //////////////////////////////////////////////////////////////////////////////////////////////////
  //  Methods
  //  function onSomething(evt)
  //  {
  //      // handle event
  //  }

  //////////////////////////////////////////////////////////////////////////////////////////////////
  //  HOOKS
  onMounted( () => {
    //useStore().dispatch("load", getApplicationUuid);
  })

</script>

<!------------------------------------------------------------------------------------------------->

<style scoped>

</style>
